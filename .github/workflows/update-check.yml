name: Check for Updates

on:
  schedule:
    - cron: '0 */12 * * *'  # 每12小时检查一次
  workflow_dispatch:      # 允许手动触发

jobs:
  check-and-update:
    runs-on: macos-latest
    
    steps:
    - name: Checkout
      uses: actions/checkout@v3
      
    - name: Check libmaxminddb for updates
      id: check
      run: |
        # 获取最新版本
        LATEST_VERSION=$(curl -s https://api.github.com/repos/maxmind/libmaxminddb/releases/latest | jq -r .tag_name)
        CURRENT_VERSION="1.12.2"
        
        if [ "$LATEST_VERSION" = "$CURRENT_VERSION" ]; then
          echo "No updates available"
          echo "update_needed=false" >> $GITHUB_OUTPUT
          exit 0
        fi
        
        # 克隆并更新源码
        git clone https://github.com/maxmind/libmaxminddb.git temp
        cd temp
        git checkout $LATEST_VERSION
        
        # 删除旧版本
        rm -rf "../Sources/CLibMaxMindDB/libmaxminddb-${CURRENT_VERSION}"
        
        # 复制所有必需文件
        mkdir -p "../Sources/CLibMaxMindDB/libmaxminddb-${LATEST_VERSION#v}/include"
        mkdir -p "../Sources/CLibMaxMindDB/libmaxminddb-${LATEST_VERSION#v}/src"
        
        # 复制源文件
        cp src/maxminddb.c "../Sources/CLibMaxMindDB/libmaxminddb-${LATEST_VERSION#v}/src/"
        cp src/data-pool.c "../Sources/CLibMaxMindDB/libmaxminddb-${LATEST_VERSION#v}/src/"
        
        # 复制头文件
        cp include/maxminddb.h "../Sources/CLibMaxMindDB/libmaxminddb-${LATEST_VERSION#v}/include/"
        
        # 复制内部头文件
        cp src/data-pool.h "../Sources/CLibMaxMindDB/libmaxminddb-${LATEST_VERSION#v}/src/"
        cp src/maxminddb-compat-util.h "../Sources/CLibMaxMindDB/libmaxminddb-${LATEST_VERSION#v}/src/"
        
        # 更新配置文件
        cat > "../Sources/CLibMaxMindDB/libmaxminddb-${LATEST_VERSION#v}/include/maxminddb_config.h" << EOF
        #ifndef MAXMINDDB_CONFIG_H
        #define MAXMINDDB_CONFIG_H
        
        #define PACKAGE_VERSION "${LATEST_VERSION#v}"
        
        #ifndef _WIN32
        #define HAVE_MMAP 1
        #endif
        
        #endif
        EOF
        
        cd ..
        rm -rf temp
        
        # 设置版本号
        echo "LIBMAXMINDDB_VERSION=$LATEST_VERSION" >> $GITHUB_ENV
        VERSION="1.0.${GITHUB_RUN_NUMBER}"
        echo "VERSION=$VERSION" >> $GITHUB_ENV
        echo "update_needed=true" >> $GITHUB_OUTPUT

    - name: Test package
      if: steps.check.outputs.update_needed == 'true'
      run: |
        swift test

    - name: Create Release
      if: steps.check.outputs.update_needed == 'true'
      uses: softprops/action-gh-release@v1
      with:
        tag_name: ${{ env.VERSION }}
        name: Release ${{ env.VERSION }}
        body: |
          Updated to libmaxminddb version ${{ env.LIBMAXMINDDB_VERSION }}
          
          ### Changes
          - Updated libmaxminddb source code to version ${{ env.LIBMAXMINDDB_VERSION }}
          
          ### Installation
          ```swift
          dependencies: [
              .package(url: "https://github.com/SunboyGo/MaxMindDBSwift.git", from: "${{ env.VERSION }}")
          ]
          ```
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Commit updates
      if: steps.check.outputs.update_needed == 'true'
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        git add Sources/CLibMaxMindDB/
        git commit -m "Update libmaxminddb to version ${{ env.LIBMAXMINDDB_VERSION }}"
        git tag ${{ env.VERSION }}
        git push && git push --tags 